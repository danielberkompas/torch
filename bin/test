#!/usr/bin/env bash

MIX_ENV=test mix compile --warnings-as-errors --force || { echo 'Please fix all compiler warnings.'; exit 1; }
MIX_ENV=test mix credo --strict --ignore design,consistency || { echo 'Elixir code failed Credo linting. See warnings above.'; exit 1; }
MIX_ENV=test mix docs || { echo 'Elixir HTML docs were not generated!'; exit 1; }
MIX_ENV=test mix test || { echo 'Elixir tests on Torch failed!'; exit 1; }

TEST_ROOT="$(pwd)/test"

if [ $CI ]; then
  if [ $TRAVIS ]; then
    echo "----------------------------------------------------------"
    echo "Running coveralls.travis..."
    echo "----------------------------------------------------------"
    mix coveralls.travis || { echo 'Elixir coverage on Torch failed!'; exit 1; }
  else
    echo "----------------------------------------------------------"
    echo "Running coveralls..."
    echo "----------------------------------------------------------"
    mix coveralls || { echo 'Elixir coverage on Torch failed!'; exit 1; }
  fi
fi

# Run integration tests
cd "$TEST_ROOT/support/apps/phx1_3" && {
  bin/test || { echo 'Integration tests on regular Phoenix 1.3 project failed!'; exit 1; }
}

cd "$TEST_ROOT/support/apps/phx1_4" && {
  bin/test || { echo 'Integration tests on regular Phoenix 1.4 project failed!'; exit 1; }
}

cd "$TEST_ROOT/support/apps/phx1_5" && {
  bin/test || { echo 'Integration tests on regular Phoenix 1.5 project failed!'; exit 1; }
}

cd "$TEST_ROOT/support/apps/phx1_5_slime" && {
  bin/test || { echo 'Integration tests on regular Phoenix 1.5 project with Slime generator failed!'; exit 1; }
}
